---
apiVersion: momiji.com/v1
kind: ClusterJsAdmissions
metadata:
  name: test-log
spec:
  kinds:
    - pods
  js: |
    function jsa_init() {
      jsa_log("cluster init")
    }
    function jsa_created(obj) {
      jsa_log("cluster created: ", obj.metadata.namespace, " ", obj.metadata.name, " ", obj.metadata.resourceVersion)
    }
    function jsa_updated(obj, old) {
      jsa_log("cluster updated: ", obj.metadata.namespace, " ", obj.metadata.name, " ", obj.metadata.resourceVersion)
    }
    function jsa_deleted(obj, old) {
      jsa_log("cluster deleted: ", obj.metadata.namespace, " ", obj.metadata.name, " ", obj.metadata.resourceVersion)
    }
    function jsa_validate(op, obj) {
      if (op != "CREATE") return;
      return { Allowed: true };
    }
---
apiVersion: momiji.com/v1
kind: JsAdmissions
metadata:
  name: test-log
  namespace: test-jsa
spec:
  kinds:
    - pods
  js: |
    function jsa_init(state) {
      jsa_log("test-jsa init")
      state.pods = 0
    }
    function jsa_created(obj, sync, state) {
      jsa_log("test-jsa created: ", obj.metadata.namespace, " ", obj.metadata.name, " ", obj.metadata.resourceVersion)
      state.pods = state.pods+1
    }
    function jsa_updated(obj, old) {
      jsa_log("test-jsa updated: ", obj.metadata.namespace, " ", obj.metadata.name, " ", obj.metadata.resourceVersion)
    }
    function jsa_deleted(obj, old) {
      jsa_log("test-jsa deleted: ", obj.metadata.namespace, " ", obj.metadata.name, " ", obj.metadata.resourceVersion)
    }
    function jsa_mutate(op, obj, sync, state) {
      if (op != "CREATE") return;
      jsa_log("test-jsa mutate: ", obj.metadata.namespace, " ", obj.metadata.name, " ", obj.metadata.resourceVersion)
      if (obj.metadata.annotations == null)
        obj.metadata.annotations = {}
      obj.metadata.annotations["jsadmissions.momiji.com/pods"] = "" + state.pods
      obj.metadata.annotations["jsadmissions.momiji.com/date"] = "" + new Date().toISOString()
      return { Allowed: true, Result: obj }
    }
